name: CI
on:
  push:
    branches: [ main ]
  pull_request:

env:
  GO_VERSION: 1.22
  GO_LINT_VERSION: v1.56

permissions:
  contents: read

jobs:
  go-mod:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go version
      uses: actions/setup-go@v4
      with:
        go-version: ${{ env.GO_VERSION }}

    - name: Verify go.mod
      run: |
        go mod tidy
        git diff --exit-code go.mod
  go-sec:
    runs-on: ubuntu-latest
    permissions:
      security-events: write
    env:
      GO111MODULE: on
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Gosec
        uses: securego/gosec@master
        with:
          # we let the report trigger content trigger a failure using the GitHub Security features.
          args: '-no-fail -fmt sarif -out results.sarif ./...'
      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v2
        with:
          # Path to SARIF file relative to the root of the repository
          sarif_file: results.sarif
  go-lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go version
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: ${{ env.GO_LINT_VERSION }}
          skip-cache: true
  go-build-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Go build
        run: go build ./...

      - name: Go run all tests
        # -count=1 disable test caching
        run: go test -race -covermode=atomic -coverprofile=coverage.out -count=1 ./...

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
